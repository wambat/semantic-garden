(clojure.core/ns
 themes.default.modules.progress
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def verticalSpacing "(:measurement 1 em)")
(def background "(:variableName @ strongTransparentBlack)")
(def border "(:identifier none)")
(def boxShadow "(:identifier none)")
(def padding "(:measurement 0 em)")
(def borderRadius "(:variableName @ defaultBorderRadius)")
(def barPosition "(:identifier relative)")
(def barHeight "(:measurement 1.75 em)")
(def barBackground "#888888")
(def barBorderRadius "(:variableName @ borderRadius)")
(def barTransitionEasing "(:variableName @ defaultEasing)")
(def barTransitionDuration "(:variableName @ defaultDuration)")
(def barTransition "(:variableName @ barTransitionEasing)")
(def barInitialWidth "(:measurement 0 %)")
(def barMinWidth "(:measurement 2 em)")
(def progressWidth "(:identifier auto)")
(def progressSize "(:variableName @ relativeSmall)")
(def progressPosition "(:identifier absolute)")
(def progressTop "(:measurement 50 %)")
(def progressRight "(:measurement 0.5 em)")
(def progressLeft "(:identifier auto)")
(def progressBottom "(:identifier auto)")
(def progressOffset "(:measurement -0.5 em)")
(def progressColor "(:variableName @ invertedLightTextColor)")
(def progressTextShadow "(:identifier none)")
(def progressFontWeight "(:variableName @ bold)")
(def progressTextAlign "(:identifier left)")
(def labelWidth "(:measurement 100 %)")
(def labelHeight "(:measurement 1.5 em)")
(def labelSize "(:measurement 1 em)")
(def labelPosition "(:identifier absolute)")
(def labelTop "(:measurement 100 %)")
(def labelLeft "(:measurement 0 %)")
(def labelRight "(:identifier auto)")
(def labelBottom "(:identifier auto)")
(def labelOffset "")
(def labelColor "(:variableName @ textColor)")
(def labelTextShadow "(:identifier none)")
(def labelFontWeight "(:variableName @ bold)")
(def labelTextAlign "(:identifier center)")
(def labelTransition "(:variableName @ defaultEasing)")
(def indicatingFirstColor "#D95C5C")
(def indicatingSecondColor "#EFBC72")
(def indicatingThirdColor "#E6BB48")
(def indicatingFourthColor "#DDC928")
(def indicatingFifthColor "#B4D95C")
(def indicatingSixthColor "#66DA81")
(def indicatingFirstLabelColor "(:variableName @ textColor)")
(def indicatingSecondLabelColor "(:variableName @ textColor)")
(def indicatingThirdLabelColor "(:variableName @ textColor)")
(def indicatingFourthLabelColor "(:variableName @ textColor)")
(def indicatingFifthLabelColor "(:variableName @ textColor)")
(def indicatingSixthLabelColor "(:variableName @ textColor)")
(def activePulseColor "(:variableName @ white)")
(def activePulseMaxOpacity "(:measurement 0.3)")
(def activePulseDuration "(:measurement 2 s)")
(def activeMinWidth "(:variableName @ barMinWidth)")
(def attachedBackground "(:identifier transparent)")
(def attachedHeight "(:identifier rem)")
(def attachedBorderRadius "(:variableName @ borderRadius)")
(def invertedBackground "(:variableName @ transparentWhite)")
(def invertedBorder "(:identifier none)")
(def invertedBarBackground "(:variableName @ barBackground)")
(def invertedProgressColor "(:variableName @ offWhite)")
(def invertedLabelColor "(:variableName @ white)")
(def tinyBarHeight "(:measurement 0.5 em)")
(def smallBarHeight "(:measurement 1 em)")
(def largeBarHeight "(:measurement 2.5 em)")
(def bigBarHeight "(:measurement 3.5 em)")
(defstyles root)
