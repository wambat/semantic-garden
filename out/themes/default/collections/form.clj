(clojure.core/ns
 themes.default.collections.form
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def gutterWidth "(:measurement 1 em)")
(def rowDistance "(:measurement 1 em)")
(def paragraphMargin "(:measurement 0 em)")
(def fieldMargin "(:variableName @ rowDistance)")
(def labelDistance "(:measurement 4 px)")
(def labelMargin "(:measurement 0 em)")
(def labelFontSize "(:variableName @ relativeSmall)")
(def labelFontWeight "(:variableName @ bold)")
(def labelTextTransform "(:identifier none)")
(def labelColor "(:variableName @ textColor)")
(def inputFont "(:variableName @ pageFont)")
(def inputWidth "(:measurement 100 %)")
(def inputFontSize "(:measurement 1 em)")
(def inputPadding "")
(def inputBorder "(:variableName @ borderColor)")
(def inputBorderRadius "(:variableName @ absoluteBorderRadius)")
(def inputColor "(:variableName @ textColor)")
(def inputTransition "(:variableName @ defaultEasing)")
(def inputBoxShadow "(:identifier inset)")
(def selectBackground "(:variableName @ white)")
(def selectBorderRadius "(:variableName @ inputBorderRadius)")
(def selectBorder "(:variableName @ inputBorder)")
(def selectPadding "(:variableName @ inputHorizontalPadding)")
(def selectBoxShadow "(:variableName @ inputBoxShadow)")
(def selectTransition "(:variableName @ inputTransition)")
(def selectColor "(:variableName @ inputColor)")
(def textAreaPadding "(:variableName @ inputHorizontalPadding)")
(def textAreaHeight "(:measurement 12 em)")
(def textAreaResize "(:identifier vertical)")
(def textAreaLineHeight "(:measurement 1.2857)")
(def textAreaMinHeight "(:measurement 8 em)")
(def textAreaMaxHeight "(:measurement 24 em)")
(def textAreaBackground "(:variableName @ inputBackground)")
(def textAreaBorder "(:variableName @ inputBorder)")
(def textAreaFontSize "(:variableName @ inputFontSize)")
(def textAreaTransition "(:variableName @ inputTransition)")
(def checkboxVerticalAlign "(:identifier top)")
(def checkboxLabelFontSize "(:measurement 1 em)")
(def checkboxLabelTextTransform "(:variableName @ labelTextTransform)")
(def promptBackground "(:variableName @ white)")
(def promptBorderColor "(:variableName @ formErrorBorder)")
(def promptBorder "(:variableName @ promptBorderColor)")
(def promptTextColor "(:variableName @ formErrorColor)")
(def inlinePromptMargin "(:measurement 0.5 em)")
(def inlinePromptBorderWidth "(:measurement 1 px)")
(def inputFocusPointerSize "(:measurement 0 px)")
(def inputFocusBackground "(:variableName @ inputBackground)")
(def inputFocusBorderColor "(:variableName @ focusedFormBorderColor)")
(def inputFocusColor "(:variableName @ selectedTextColor)")
(def inputFocusBoxShadow "(:identifier inset)")
(def inputFocusBorderRadius "(:variableName @ inputBorderRadius)")
(def textAreaFocusBackground "(:variableName @ inputFocusBackground)")
(def textAreaFocusBorderColor "(:variableName @ inputFocusBorderColor)")
(def textAreaFocusColor "(:variableName @ inputFocusColor)")
(def textAreaFocusBoxShadow "(:variableName @ inputFocusBoxShadow)")
(def
 textAreaFocusBorderRadius
 "(:variableName @ inputFocusBorderRadius)")
(def disabledLabelOpacity "(:variableName @ disabledOpacity)")
(def formErrorColor "(:variableName @ negativeTextColor)")
(def formErrorBorder "(:variableName @ negativeBorderColor)")
(def formErrorBackground "(:variableName @ negativeBackgroundColor)")
(def inputAutoFillBackground "#FFFFF0")
(def inputAutoFillBorder "#E5DFA1")
(def
 inputAutoFillFocusBackground
 "(:variableName @ inputAutoFillBackground)")
(def inputAutoFillFocusBorder "#D5C315")
(def inputAutoFillErrorBackground "#FFFAF0")
(def inputAutoFillErrorBorder "#E0B4B4")
(def inputErrorBorderRadius "")
(def inputErrorBoxShadow "(:identifier none)")
(def dropdownErrorHoverBackground "#FBE7E7")
(def
 dropdownErrorSelectedBackground
 "(:variableName @ dropdownErrorHoverBackground)")
(def dropdownErrorActiveBackground "#FDCFCF")
(def dropdownErrorLabelBackground "#EACBCB")
(def dropdownErrorLabelColor "(:variableName @ errorTextColor)")
(def
 inputErrorFocusBackground
 "(:variableName @ negativeBackgroundColor)")
(def inputErrorFocusColor "(:variableName @ negativeTextColor)")
(def inputErrorFocusBorder "(:variableName @ negativeBorderColor)")
(def inputErrorFocusBoxShadow "(:identifier none)")
(def inputErrorPlaceholderColor ")")
(def inputErrorPlaceholderFocusColor ")")
(def loaderDimmerColor ")")
(def loaderDimmerZIndex "(:measurement 100)")
(def loaderSize "(:measurement 3 em)")
(def loaderLineZIndex "(:measurement 101)")
(def requiredContent "*")
(def requiredColor "(:variableName @ negativeColor)")
(def requiredVerticalOffset "(:measurement -0.2 em)")
(def requiredDistance "(:measurement 0.2 em)")
(def requiredMargin "(:variableName @ requiredDistance)")
(def invertedInputBackground "(:variableName @ inputBackground)")
(def invertedInputBorderColor "(:variableName @ whiteBorderColor)")
(def invertedInputBoxShadow "(:variableName @ inputBoxShadow)")
(def invertedInputColor "(:variableName @ inputColor)")
(def invertedLabelColor "(:variableName @ invertedTextColor)")
(def invertedInputBoxShadow "(:identifier none)")
(def groupedMargin "(:variableName @ fieldMargin)")
(def groupedFieldMargin "(:measurement 0 em)")
(def groupedLabelDistance "(:variableName @ labelDistance)")
(def groupedLabelColor "(:variableName @ labelColor)")
(def groupedLabelMargin "(:variableName @ labelMargin)")
(def groupedLabelFontSize "(:variableName @ labelFontSize)")
(def groupedLabelFontWeight "(:variableName @ labelFontWeight)")
(def groupedLabelTextTransform "(:variableName @ labelTextTransform)")
(def inlineInputSize "(:variableName @ relativeMedium)")
(def inlineLabelDistance "(:variableName @ relativeTiny)")
(def inlineLabelColor "(:variableName @ labelColor)")
(def inlineLabelFontSize "(:variableName @ labelFontSize)")
(def inlineLabelFontWeight "(:variableName @ labelFontWeight)")
(def inlineLabelTextTransform "(:variableName @ labelTextTransform)")
(def groupedInlineLabelMargin "(:measurement 0 em)")
(def inlineFieldsMargin "(:measurement 0 em)")
(defstyles root)
