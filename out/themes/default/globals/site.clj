(clojure.core/ns
 themes.default.globals.site
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def fontName "Lato")
(def fontSmoothing "(:identifier antialiased)")
(def headerFont "(:identifier sans-serif)")
(def pageFont "(:identifier sans-serif)")
(def googleFontName "(:variableName @ fontName)")
(def googleFontSizes "400,700,400italic,700italic")
(def googleSubset "latin")
(def googleProtocol "https://")
(def
 googleFontRequest
 "@{googleFontName}:@{googleFontSizes}&subset=@{googleSubset}")
(def bold "(:identifier bold)")
(def normal "(:identifier normal)")
(def emSize "(:measurement 14 px)")
(def fontSize "(:measurement 14 px)")
(def relativeBorderRadius "(:variableName @ relative4px)")
(def absoluteBorderRadius "(:measurement 4 px)")
(def defaultBorderRadius "(:variableName @ absoluteBorderRadius)")
(def primaryColor "(:variableName @ blue)")
(def secondaryColor "(:variableName @ black)")
(def lightPrimaryColor "(:variableName @ lightBlue)")
(def lightSecondaryColor "(:variableName @ lightBlack)")
(def headerFontWeight "(:variableName @ bold)")
(def headerLineHeight "")
(def h1 "(:identifier rem)")
(def h2 "(:identifier rem)")
(def h3 "(:identifier rem)")
(def h4 "(:identifier rem)")
(def h5 "(:identifier rem)")
(def inputBackground "(:variableName @ white)")
(def inputVerticalPadding "(:variableName @ relative11px)")
(def inputHorizontalPadding "(:variableName @ relative14px)")
(def inputPadding "(:variableName @ inputHorizontalPadding)")
(def inputColor "(:variableName @ textColor)")
(def inputPlaceholderColor ")")
(def inputPlaceholderFocusColor ")")
(def inputLineHeight "")
(def focusedFormBorderColor "#85B7D9")
(def focusedFormMutedBorderColor "#96C8DA")
(def miniSize "")
(def tinySize "")
(def smallSize "")
(def mediumSize "")
(def largeSize "")
(def bigSize "")
(def hugeSize "")
(def massiveSize "")
(def pageBackground "#FFFFFF")
(def pageOverflowX "(:identifier hidden)")
(def lineHeight "(:measurement 1.4285 em)")
(def textColor ")")
(def paragraphMargin "(:measurement 1 em)")
(def paragraphLineHeight "(:variableName @ lineHeight)")
(def linkColor "#4183C4")
(def linkUnderline "(:identifier none)")
(def linkHoverColor ")")
(def linkHoverUnderline "(:variableName @ linkUnderline)")
(def useCustomScrollbars "(:identifier true)")
(def customScrollbarWidth "(:measurement 10 px)")
(def customScrollbarHeight "(:measurement 10 px)")
(def trackBackground ")")
(def trackBorderRadius "(:measurement 0 px)")
(def thumbBorderRadius "(:measurement 5 px)")
(def thumbBackground ")")
(def thumbTransition "(:identifier ease)")
(def thumbInactiveBackground ")")
(def thumbHoverBackground ")")
(def trackInvertedBackground ")")
(def thumbInvertedBackground ")")
(def thumbInvertedInactiveBackground ")")
(def thumbInvertedHoverBackground ")")
(def highlightBackground "#CCE2FF")
(def highlightColor "(:variableName @ textColor)")
(def inputHighlightBackground ")")
(def inputHighlightColor "(:variableName @ textColor)")
(def loaderSize "(:variableName @ relativeBig)")
(def loaderSpeed "(:measurement 0.6 s)")
(def loaderLineWidth "(:measurement 0.2 em)")
(def loaderFillColor ")")
(def loaderLineColor "(:variableName @ grey)")
(def invertedLoaderFillColor ")")
(def invertedLoaderLineColor "(:variableName @ white)")
(def columnCount "(:measurement 16)")
(def defaultDuration "(:measurement 0.1 s)")
(def defaultEasing "(:identifier ease)")
(def mobileBreakpoint "(:measurement 320 px)")
(def tabletBreakpoint "(:measurement 768 px)")
(def computerBreakpoint "(:measurement 992 px)")
(def largeMonitorBreakpoint "(:measurement 1200 px)")
(def widescreenMonitorBreakpoint "(:measurement 1920 px)")
(def red "#DB2828")
(def orange "#F2711C")
(def yellow "#FBBD08")
(def olive "#B5CC18")
(def green "#21BA45")
(def teal "#00B5AD")
(def blue "#2185D0")
(def violet "#6435C9")
(def purple "#A333C8")
(def pink "#E03997")
(def brown "#A5673F")
(def grey "#767676")
(def black "#1B1C1D")
(def lightRed "#FF695E")
(def lightOrange "#FF851B")
(def lightYellow "#FFE21F")
(def lightOlive "#D9E778")
(def lightGreen "#2ECC40")
(def lightTeal "#6DFFFF")
(def lightBlue "#54C8FF")
(def lightViolet "#A291FB")
(def lightPurple "#DC73FF")
(def lightPink "#FF8EDF")
(def lightBrown "#D67C1C")
(def lightGrey "#DCDDDE")
(def lightBlack "#545454")
(def fullBlack "#000000")
(def offWhite "#F9FAFB")
(def darkWhite "#F3F4F5")
(def midWhite "#DCDDDE")
(def white "#FFFFFF")
(def redBackground "#FFE8E6")
(def orangeBackground "#FFEDDE")
(def yellowBackground "#FFF8DB")
(def oliveBackground "#FBFDEF")
(def greenBackground "#E5F9E7")
(def tealBackground "#E1F7F7")
(def blueBackground "#DFF0FF")
(def violetBackground "#EAE7FF")
(def purpleBackground "#F6E7FF")
(def pinkBackground "#FFE3FB")
(def brownBackground "#F1E2D3")
(def redHeaderColor ")")
(def oliveHeaderColor ")")
(def greenHeaderColor ")")
(def yellowHeaderColor ")")
(def blueHeaderColor ")")
(def tealHeaderColor ")")
(def pinkHeaderColor ")")
(def violetHeaderColor ")")
(def purpleHeaderColor ")")
(def orangeHeaderColor ")")
(def brownHeaderColor ")")
(def redTextColor "(:variableName @ red)")
(def orangeTextColor "(:variableName @ orange)")
(def yellowTextColor "#B58105")
(def oliveTextColor "#8ABC1E")
(def greenTextColor "#1EBC30")
(def tealTextColor "#10A3A3")
(def blueTextColor "(:variableName @ blue)")
(def violetTextColor "(:variableName @ violet)")
(def purpleTextColor "(:variableName @ purple)")
(def pinkTextColor "(:variableName @ pink)")
(def brownTextColor "(:variableName @ brown)")
(def redBorderColor "(:variableName @ redTextColor)")
(def orangeBorderColor "(:variableName @ orangeTextColor)")
(def yellowBorderColor "(:variableName @ yellowTextColor)")
(def oliveBorderColor "(:variableName @ oliveTextColor)")
(def greenBorderColor "(:variableName @ greenTextColor)")
(def tealBorderColor "(:variableName @ tealTextColor)")
(def blueBorderColor "(:variableName @ blueTextColor)")
(def violetBorderColor "(:variableName @ violetTextColor)")
(def purpleBorderColor "(:variableName @ purpleTextColor)")
(def pinkBorderColor "(:variableName @ pinkTextColor)")
(def brownBorderColor "(:variableName @ brownTextColor)")
(def subtleTransparentBlack ")")
(def transparentBlack ")")
(def strongTransparentBlack ")")
(def veryStrongTransparentBlack ")")
(def subtleTransparentWhite ")")
(def transparentWhite ")")
(def strongTransparentWhite ")")
(def subtleGradient ")")
(def subtleShadow "(:variableName @ borderColor)")
(def floatingShadow ")")
(def positiveColor "(:variableName @ green)")
(def positiveBackgroundColor "#FCFFF5")
(def positiveBorderColor "#A3C293")
(def positiveHeaderColor "#1A531B")
(def positiveTextColor "#2C662D")
(def negativeColor "(:variableName @ red)")
(def negativeBackgroundColor "#FFF6F6")
(def negativeBorderColor "#E0B4B4")
(def negativeHeaderColor "#912D2B")
(def negativeTextColor "#9F3A38")
(def infoColor "#31CCEC")
(def infoBackgroundColor "#F8FFFF")
(def infoBorderColor "#A9D5DE")
(def infoHeaderColor "#0E566C")
(def infoTextColor "#276F86")
(def warningColor "#F2C037")
(def warningBorderColor "#C9BA9B")
(def warningBackgroundColor "#FFFAF3")
(def warningHeaderColor "#794B02")
(def warningTextColor "#573A08")
(def imagePath "../../themes/default/assets/images")
(def fontPath "../../themes/default/assets/fonts")
(def mini ")")
(def tiny ")")
(def small ")")
(def medium ")")
(def large ")")
(def big ")")
(def huge ")")
(def massive ")")
(def relativeMini ")")
(def relativeTiny ")")
(def relativeSmall ")")
(def relativeMedium ")")
(def relativeLarge ")")
(def relativeBig ")")
(def relativeHuge ")")
(def relativeMassive ")")
(def absoluteMini ")")
(def absoluteTiny ")")
(def absoluteSmall ")")
(def absoluteMedium ")")
(def absoluteLarge ")")
(def absoluteBig ")")
(def absoluteHuge ")")
(def absoluteMassive ")")
(def iconWidth "(:measurement 1.18 em)")
(def darkTextColor ")")
(def mutedTextColor ")")
(def lightTextColor ")")
(def unselectedTextColor ")")
(def hoveredTextColor ")")
(def pressedTextColor ")")
(def selectedTextColor ")")
(def disabledTextColor ")")
(def invertedTextColor ")")
(def invertedMutedTextColor ")")
(def invertedLightTextColor ")")
(def invertedUnselectedTextColor ")")
(def invertedHoveredTextColor ")")
(def invertedPressedTextColor ")")
(def invertedSelectedTextColor ")")
(def invertedDisabledTextColor ")")
(def facebookColor "#3B5998")
(def twitterColor "#55ACEE")
(def googlePlusColor "#DD4B39")
(def linkedInColor "#1F88BE")
(def youtubeColor "#FF0000")
(def pinterestColor "#BD081C")
(def vkColor "#4D7198")
(def instagramColor "#49769C")
(def circularRadius "(:identifier rem)")
(def borderColor ")")
(def strongBorderColor ")")
(def internalBorderColor ")")
(def selectedBorderColor ")")
(def strongSelectedBorderColor ")")
(def disabledBorderColor ")")
(def solidInternalBorderColor "#FAFAFA")
(def solidBorderColor "#D4D4D5")
(def solidSelectedBorderColor "#BCBDBD")
(def whiteBorderColor ")")
(def selectedWhiteBorderColor ")")
(def solidWhiteBorderColor "#555555")
(def selectedSolidWhiteBorderColor "#999999")
(def loaderOffset "")
(def loaderMargin "(:variableName @ loaderOffset)")
(def scrollbarWidth "(:measurement 17 px)")
(def glyphWidth "(:measurement 1.1 em)")
(def lineHeightOffset "")
(def headerBottomMargin "(:identifier rem)")
(def headerMargin "(:variableName @ headerBottomMargin)")
(def pageMinWidth "(:measurement 320 px)")
(def successBackgroundColor "(:variableName @ positiveBackgroundColor)")
(def successColor "(:variableName @ positiveColor)")
(def successBorderColor "(:variableName @ positiveBorderColor)")
(def successHeaderColor "(:variableName @ positiveHeaderColor)")
(def successTextColor "(:variableName @ positiveTextColor)")
(def errorBackgroundColor "(:variableName @ negativeBackgroundColor)")
(def errorColor "(:variableName @ negativeColor)")
(def errorBorderColor "(:variableName @ negativeBorderColor)")
(def errorHeaderColor "(:variableName @ negativeHeaderColor)")
(def errorTextColor "(:variableName @ negativeTextColor)")
(def largestMobileScreen "")
(def largestTabletScreen "")
(def largestSmallMonitor "")
(def largestLargeMonitor "")
(def  "(:measurement 1 px)")
(def  "(:measurement 2 px)")
(def  "(:measurement 3 px)")
(def  "(:measurement 4 px)")
(def  "(:measurement 5 px)")
(def  "(:measurement 6 px)")
(def  "(:measurement 7 px)")
(def  "(:measurement 8 px)")
(def  "(:measurement 9 px)")
(def  "(:measurement 10 px)")
(def  "(:measurement 11 px)")
(def  "(:measurement 12 px)")
(def  "(:measurement 13 px)")
(def  "(:measurement 14 px)")
(def  "(:measurement 15 px)")
(def  "(:measurement 16 px)")
(def  "(:measurement 17 px)")
(def  "(:measurement 18 px)")
(def  "(:measurement 19 px)")
(def  "(:measurement 20 px)")
(def  "(:measurement 21 px)")
(def  "(:measurement 22 px)")
(def  "(:measurement 23 px)")
(def  "(:measurement 24 px)")
(def  "(:measurement 25 px)")
(def  "(:measurement 26 px)")
(def  "(:measurement 27 px)")
(def  "(:measurement 28 px)")
(def  "(:measurement 29 px)")
(def  "(:measurement 30 px)")
(def  "(:measurement 31 px)")
(def  "(:measurement 32 px)")
(def  "(:measurement 33 px)")
(def  "(:measurement 34 px)")
(def  "(:measurement 35 px)")
(def  "(:measurement 36 px)")
(def  "(:measurement 37 px)")
(def  "(:measurement 38 px)")
(def  "(:measurement 39 px)")
(def  "(:measurement 40 px)")
(def  "(:measurement 41 px)")
(def  "(:measurement 42 px)")
(def  "(:measurement 43 px)")
(def  "(:measurement 44 px)")
(def  "(:measurement 45 px)")
(def  "(:measurement 46 px)")
(def  "(:measurement 47 px)")
(def  "(:measurement 48 px)")
(def  "(:measurement 49 px)")
(def  "(:measurement 50 px)")
(def  "(:measurement 51 px)")
(def  "(:measurement 52 px)")
(def  "(:measurement 53 px)")
(def  "(:measurement 54 px)")
(def  "(:measurement 55 px)")
(def  "(:measurement 56 px)")
(def  "(:measurement 57 px)")
(def  "(:measurement 58 px)")
(def  "(:measurement 59 px)")
(def  "(:measurement 60 px)")
(def  "(:measurement 61 px)")
(def  "(:measurement 62 px)")
(def  "(:measurement 63 px)")
(def  "(:measurement 64 px)")
(def relative1px "")
(def relative2px "")
(def relative3px "")
(def relative4px "")
(def relative5px "")
(def relative6px "")
(def relative7px "")
(def relative8px "")
(def relative9px "")
(def relative10px "")
(def relative11px "")
(def relative12px "")
(def relative13px "")
(def relative14px "")
(def relative15px "")
(def relative16px "")
(def relative17px "")
(def relative18px "")
(def relative19px "")
(def relative20px "")
(def relative21px "")
(def relative22px "")
(def relative23px "")
(def relative24px "")
(def relative25px "")
(def relative26px "")
(def relative27px "")
(def relative28px "")
(def relative29px "")
(def relative30px "")
(def relative31px "")
(def relative32px "")
(def relative33px "")
(def relative34px "")
(def relative35px "")
(def relative36px "")
(def relative37px "")
(def relative38px "")
(def relative39px "")
(def relative40px "")
(def relative41px "")
(def relative42px "")
(def relative43px "")
(def relative44px "")
(def relative45px "")
(def relative46px "")
(def relative47px "")
(def relative48px "")
(def relative49px "")
(def relative50px "")
(def relative51px "")
(def relative52px "")
(def relative53px "")
(def relative54px "")
(def relative55px "")
(def relative56px "")
(def relative57px "")
(def relative58px "")
(def relative59px "")
(def relative60px "")
(def relative61px "")
(def relative62px "")
(def relative63px "")
(def relative64px "")
(def oneWide "")
(def twoWide "")
(def threeWide "")
(def fourWide "")
(def fiveWide "")
(def sixWide "")
(def sevenWide "")
(def eightWide "")
(def nineWide "")
(def tenWide "")
(def elevenWide "")
(def twelveWide "")
(def thirteenWide "")
(def fourteenWide "")
(def fifteenWide "")
(def sixteenWide "")
(def oneColumn "")
(def twoColumn "")
(def threeColumn "")
(def fourColumn "")
(def fiveColumn "")
(def sixColumn "")
(def sevenColumn "")
(def eightColumn "")
(def nineColumn "")
(def tenColumn "")
(def elevenColumn "")
(def twelveColumn "")
(def thirteenColumn "")
(def fourteenColumn "")
(def fifteenColumn "")
(def sixteenColumn "")
(def disabledOpacity "(:measurement 0.45)")
(def disabledTextColor ")")
(def invertedDisabledTextColor ")")
(def floatingShadowHover ")")
(def primaryColorHover ")")
(def secondaryColorHover ")")
(def redHover ")")
(def orangeHover ")")
(def yellowHover ")")
(def oliveHover ")")
(def greenHover ")")
(def tealHover ")")
(def blueHover ")")
(def violetHover ")")
(def purpleHover ")")
(def pinkHover ")")
(def brownHover ")")
(def lightRedHover ")")
(def lightOrangeHover ")")
(def lightYellowHover ")")
(def lightOliveHover ")")
(def lightGreenHover ")")
(def lightTealHover ")")
(def lightBlueHover ")")
(def lightVioletHover ")")
(def lightPurpleHover ")")
(def lightPinkHover ")")
(def lightBrownHover ")")
(def lightGreyHover ")")
(def lightBlackHover ")")
(def positiveColorHover ")")
(def negativeColorHover ")")
(def facebookHoverColor ")")
(def twitterHoverColor ")")
(def googlePlusHoverColor ")")
(def linkedInHoverColor ")")
(def youtubeHoverColor ")")
(def instagramHoverColor ")")
(def pinterestHoverColor ")")
(def vkHoverColor ")")
(def fullBlackHover ")")
(def blackHover ")")
(def greyHover ")")
(def whiteHover ")")
(def offWhiteHover ")")
(def darkWhiteHover ")")
(def primaryColorFocus ")")
(def secondaryColorFocus ")")
(def redFocus ")")
(def orangeFocus ")")
(def yellowFocus ")")
(def oliveFocus ")")
(def greenFocus ")")
(def tealFocus ")")
(def blueFocus ")")
(def violetFocus ")")
(def purpleFocus ")")
(def pinkFocus ")")
(def brownFocus ")")
(def lightRedFocus ")")
(def lightOrangeFocus ")")
(def lightYellowFocus ")")
(def lightOliveFocus ")")
(def lightGreenFocus ")")
(def lightTealFocus ")")
(def lightBlueFocus ")")
(def lightVioletFocus ")")
(def lightPurpleFocus ")")
(def lightPinkFocus ")")
(def lightBrownFocus ")")
(def lightGreyFocus ")")
(def lightBlackFocus ")")
(def positiveColorFocus ")")
(def negativeColorFocus ")")
(def facebookFocusColor ")")
(def twitterFocusColor ")")
(def googlePlusFocusColor ")")
(def linkedInFocusColor ")")
(def youtubeFocusColor ")")
(def instagramFocusColor ")")
(def pinterestFocusColor ")")
(def vkFocusColor ")")
(def fullBlackFocus ")")
(def blackFocus ")")
(def greyFocus ")")
(def whiteFocus ")")
(def offWhiteFocus ")")
(def darkWhiteFocus ")")
(def primaryColorDown ")")
(def secondaryColorDown ")")
(def redDown ")")
(def orangeDown ")")
(def yellowDown ")")
(def oliveDown ")")
(def greenDown ")")
(def tealDown ")")
(def blueDown ")")
(def violetDown ")")
(def purpleDown ")")
(def pinkDown ")")
(def brownDown ")")
(def lightRedDown ")")
(def lightOrangeDown ")")
(def lightYellowDown ")")
(def lightOliveDown ")")
(def lightGreenDown ")")
(def lightTealDown ")")
(def lightBlueDown ")")
(def lightVioletDown ")")
(def lightPurpleDown ")")
(def lightPinkDown ")")
(def lightBrownDown ")")
(def lightGreyDown ")")
(def lightBlackDown ")")
(def positiveColorDown ")")
(def negativeColorDown ")")
(def facebookDownColor ")")
(def twitterDownColor ")")
(def googlePlusDownColor ")")
(def linkedInDownColor ")")
(def youtubeDownColor ")")
(def instagramDownColor ")")
(def pinterestDownColor ")")
(def vkDownColor ")")
(def fullBlackDown ")")
(def blackDown ")")
(def greyDown ")")
(def whiteDown ")")
(def offWhiteDown ")")
(def darkWhiteDown ")")
(def primaryColorActive ")")
(def secondaryColorActive ")")
(def redActive ")")
(def orangeActive ")")
(def yellowActive ")")
(def oliveActive ")")
(def greenActive ")")
(def tealActive ")")
(def blueActive ")")
(def violetActive ")")
(def purpleActive ")")
(def pinkActive ")")
(def brownActive ")")
(def lightRedActive ")")
(def lightOrangeActive ")")
(def lightYellowActive ")")
(def lightOliveActive ")")
(def lightGreenActive ")")
(def lightTealActive ")")
(def lightBlueActive ")")
(def lightVioletActive ")")
(def lightPurpleActive ")")
(def lightPinkActive ")")
(def lightBrownActive ")")
(def lightGreyActive ")")
(def lightBlackActive ")")
(def positiveColorActive ")")
(def negativeColorActive ")")
(def facebookActiveColor ")")
(def twitterActiveColor ")")
(def googlePlusActiveColor ")")
(def linkedInActiveColor ")")
(def youtubeActiveColor ")")
(def instagramActiveColor ")")
(def pinterestActiveColor ")")
(def vkActiveColor ")")
(def fullBlackActive ")")
(def blackActive ")")
(def greyActive ")")
(def whiteActive ")")
(def offWhiteActive ")")
(def darkWhiteActive ")")
(defstyles root)
