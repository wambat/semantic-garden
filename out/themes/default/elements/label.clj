(clojure.core/ns
 themes.default.elements.label
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def verticalAlign "(:identifier baseline)")
(def verticalMargin "(:measurement 0 em)")
(def horizontalMargin "(:variableName @ relative2px)")
(def backgroundColor "#E8E8E8")
(def color "(:variableName @ mutedTextColor)")
(def backgroundImage "(:identifier none)")
(def verticalPadding "(:measurement 0.5833 em)")
(def horizontalPadding "(:measurement 0.833 em)")
(def borderRadius "(:variableName @ absoluteBorderRadius)")
(def textTransform "(:identifier none)")
(def fontWeight "(:variableName @ bold)")
(def borderWidth "(:measurement 1 px)")
(def border "(:identifier transparent)")
(def lineHeightOffset "")
(def labelTransitionDuration "(:variableName @ defaultDuration)")
(def labelTransitionEasing "(:variableName @ defaultEasing)")
(def transition "(:variableName @ labelTransitionEasing)")
(def groupVerticalMargin "(:measurement 0.5 em)")
(def groupHorizontalMargin "(:measurement 0.5 em)")
(def linkOpacity "(:measurement 0.5)")
(def linkTransition "(:variableName @ labelTransitionEasing)")
(def iconDistance "(:measurement 0.75 em)")
(def imageHeight "")
(def detailFontWeight "(:variableName @ bold)")
(def detailOpacity "(:measurement 0.8)")
(def detailIconDistance "(:measurement 0.25 em)")
(def detailMargin "(:measurement 1 em)")
(def deleteOpacity "(:variableName @ linkOpacity)")
(def deleteSize "(:variableName @ relativeSmall)")
(def deleteMargin "(:measurement 0.5 em)")
(def deleteTransition "(:variableName @ labelTransitionEasing)")
(def imageLabelBackground "(:variableName @ backgroundColor)")
(def imageLabelVerticalPadding "(:variableName @ verticalPadding)")
(def imageLabelHorizontalPadding "(:variableName @ horizontalPadding)")
(def imageLabelTextDistance "(:measurement 0.5 em)")
(def
 imageLabelDetailDistance
 "(:variableName @ imageLabelTextDistance)")
(def imageLabelBorderRadius "(:variableName @ borderRadius)")
(def imageLabelBoxShadow "(:identifier none)")
(def imageLabelPadding "(:variableName @ imageLabelTextDistance)")
(def imageLabelImageMargin "")
(def
 imageLabelImageBorderRadius
 "(:variableName @ imageLabelBorderRadius)")
(def imageLabelImageHeight "(:variableName @ imageHeight)")
(def
 imageLabelDetailBackground
 "(:variableName @ strongTransparentBlack)")
(def
 imageLabelDetailPadding
 "(:variableName @ imageLabelHorizontalPadding)")
(def imageLabelDetailMargin "")
(def labelHoverBackgroundColor "#E0E0E0")
(def labelHoverBackgroundImage "(:identifier none)")
(def labelHoverTextColor "(:variableName @ hoveredTextColor)")
(def labelActiveBackgroundColor "#D0D0D0")
(def labelActiveBackgroundImage "(:identifier none)")
(def labelActiveTextColor "(:variableName @ selectedTextColor)")
(def labelActiveHoverBackgroundColor "#C8C8C8")
(def labelActiveHoverBackgroundImage "(:identifier none)")
(def labelActiveHoverTextColor "(:variableName @ selectedTextColor)")
(def basicBackground "(:variableName @ white)")
(def basicBorderWidth "(:measurement 1 px)")
(def basicBorder "(:variableName @ borderColor)")
(def basicColor "(:variableName @ textColor)")
(def basicBoxShadow "(:identifier none)")
(def basicHoverBackground "(:variableName @ basicBackground)")
(def basicHoverColor "(:variableName @ linkHoverColor)")
(def basicHoverBorder "(:variableName @ basicBorder)")
(def basicHoverBoxShadow "(:variableName @ basicBoxShadow)")
(def tagCircleColor "(:variableName @ white)")
(def tagCircleSize "(:measurement 0.5 em)")
(def tagHorizontalPadding "(:measurement 1.5 em)")
(def tagCircleBoxShadow ")")
(def tagTriangleRightOffset "(:measurement 100 %)")
(def tagTriangleTopOffset "(:measurement 50 %)")
(def tagTriangleSize "(:measurement 1.56 em)")
(def tagTriangleBackgroundImage "(:identifier none)")
(def tagTransition "(:identifier none)")
(def ribbonTriangleSize "(:measurement 1.2 em)")
(def ribbonShadowColor ")")
(def ribbonMargin "(:identifier rem)")
(def ribbonImageTopDistance "(:identifier rem)")
(def ribbonImageMargin "(:identifier rem)")
(def ribbonTableMargin "(:variableName @ relativeMini)")
(def redTextColor "(:variableName @ white)")
(def orangeTextColor "(:variableName @ white)")
(def yellowTextColor "(:variableName @ white)")
(def oliveTextColor "(:variableName @ white)")
(def greenTextColor "(:variableName @ white)")
(def tealTextColor "(:variableName @ white)")
(def blueTextColor "(:variableName @ white)")
(def violetTextColor "(:variableName @ white)")
(def purpleTextColor "(:variableName @ white)")
(def pinkTextColor "(:variableName @ white)")
(def brownTextColor "(:variableName @ white)")
(def greyTextColor "(:variableName @ white)")
(def blackTextColor "(:variableName @ white)")
(def redHoverTextColor "(:variableName @ white)")
(def orangeHoverTextColor "(:variableName @ white)")
(def yellowHoverTextColor "(:variableName @ white)")
(def oliveHoverTextColor "(:variableName @ white)")
(def greenHoverTextColor "(:variableName @ white)")
(def tealHoverTextColor "(:variableName @ white)")
(def blueHoverTextColor "(:variableName @ white)")
(def violetHoverTextColor "(:variableName @ white)")
(def purpleHoverTextColor "(:variableName @ white)")
(def pinkHoverTextColor "(:variableName @ white)")
(def brownHoverTextColor "(:variableName @ white)")
(def greyHoverTextColor "(:variableName @ white)")
(def blackHoverTextColor "(:variableName @ white)")
(def redRibbonShadow ")")
(def orangeRibbonShadow ")")
(def yellowRibbonShadow ")")
(def oliveRibbonShadow ")")
(def greenRibbonShadow ")")
(def tealRibbonShadow ")")
(def blueRibbonShadow ")")
(def violetRibbonShadow ")")
(def purpleRibbonShadow ")")
(def pinkRibbonShadow ")")
(def brownRibbonShadow ")")
(def greyRibbonShadow ")")
(def blackRibbonShadow ")")
(def attachedSegmentPadding "(:identifier rem)")
(def attachedVerticalPadding "(:measurement 0.75 em)")
(def attachedHorizontalPadding "(:measurement 1 em)")
(def attachedCornerBorderRadius "(:measurement 3 px)")
(def attachedBorderRadius "(:variableName @ borderRadius)")
(def cornerSizeRatio "(:measurement 1)")
(def cornerTransition "(:variableName @ labelTransitionEasing)")
(def cornerTriangleSize "(:measurement 4 em)")
(def cornerTriangleTransition "(:variableName @ labelTransitionEasing)")
(def cornerTriangleZIndex "(:measurement 1)")
(def cornerIconSize "(:variableName @ relativeLarge)")
(def cornerIconTopOffset "(:variableName @ relative9px)")
(def cornerIconLeftOffset "(:variableName @ relative11px)")
(def cornerTextWidth "(:measurement 3 em)")
(def cornerTextWeight "(:variableName @ bold)")
(def cornerTextSize "(:measurement 1 em)")
(def horizontalLabelMinWidth "(:measurement 3 em)")
(def horizontalLabelMargin "(:measurement 0.5 em)")
(def horizontalLabelVerticalPadding "(:measurement 0.4 em)")
(def circularPadding "(:measurement 0.5 em)")
(def circularMinSize "(:measurement 2 em)")
(def emptyCircleSize "(:measurement 0.5 em)")
(def pointingBorderColor "(:identifier inherit)")
(def pointingBorderWidth "(:variableName @ borderWidth)")
(def pointingVerticalDistance "(:measurement 1 em)")
(def pointingTriangleSize "(:measurement 0.6666 em)")
(def
 pointingHorizontalDistance
 "(:variableName @ pointingTriangleSize)")
(def
 pointingTriangleTransition
 "(:variableName @ labelTransitionEasing)")
(def pointingTriangleZIndex "(:measurement 2)")
(def
 basicPointingTriangleOffset
 "(:variableName @ pointingBorderWidth)")
(def floatingTopOffset "(:measurement -1 em)")
(def floatingLeftOffset "(:measurement -1.5 em)")
(def floatingZIndex "(:measurement 100)")
(def mini "(:measurement 9 px)")
(def tiny "(:measurement 10 px)")
(def small "(:measurement 11 px)")
(def medium "(:measurement 12 px)")
(def large "(:variableName @ absoluteMedium)")
(def big "(:variableName @ absoluteBig)")
(def huge "(:variableName @ absoluteHuge)")
(def massive "(:variableName @ absoluteMassive)")
(defstyles root)
