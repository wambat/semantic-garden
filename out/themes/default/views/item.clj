(clojure.core/ns
 themes.default.views.item
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def groupMargin "(:measurement 0 em)")
(def display "(:identifier flex)")
(def background "(:identifier transparent)")
(def borderRadius "(:identifier rem)")
(def minHeight "(:measurement 0 px)")
(def padding "(:measurement 0 em)")
(def width "(:measurement 100 %)")
(def boxShadow "(:identifier none)")
(def border "(:identifier none)")
(def zIndex "")
(def transition "(:variableName @ defaultEasing)")
(def itemSpacing "(:measurement 1 em)")
(def imageWidth "(:measurement 175 px)")
(def contentImageDistance "(:measurement 1.5 em)")
(def tabletItemSpacing "(:measurement 1 em)")
(def tabletImageWidth "(:measurement 150 px)")
(def tabletContentImageDistance "(:measurement 1 em)")
(def mobileItemSpacing "(:measurement 2 em)")
(def mobileImageWidth "(:identifier auto)")
(def mobileImageMaxHeight "(:measurement 250 px)")
(def mobileContentImageDistance "(:measurement 1.5 em)")
(def imageDisplay "(:identifier block)")
(def imageFloat "(:identifier none)")
(def imageMaxHeight "")
(def imageVerticalAlign "(:identifier top)")
(def imageMargin "(:measurement 0 em)")
(def imagePadding "(:measurement 0 em)")
(def imageBorder "(:identifier none)")
(def imageBorderRadius "(:identifier rem)")
(def imageBoxShadow "(:identifier none)")
(def imageBorder "(:identifier none)")
(def contentDisplay "(:identifier block)")
(def contentVerticalAlign "(:identifier top)")
(def contentWidth "(:identifier auto)")
(def contentOffset "(:measurement 0 em)")
(def contentBackground "(:identifier none)")
(def contentMargin "(:measurement 0 em)")
(def contentPadding "(:measurement 0 em)")
(def contentFontSize "(:measurement 1 em)")
(def contentBorder "(:identifier none)")
(def contentBorderRadius "(:measurement 0 em)")
(def contentBoxShadow "(:identifier none)")
(def headerMargin "(:measurement 0 em)")
(def headerFontWeight "(:variableName @ bold)")
(def headerFontSize "(:variableName @ relativeBig)")
(def headerColor "(:variableName @ darkTextColor)")
(def metaMargin "(:measurement 0.5 em)")
(def metaFontSize "(:measurement 1 em)")
(def metaLineHeight "(:measurement 1 em)")
(def metaSpacing "(:measurement 0.3 em)")
(def metaColor ")")
(def actionOpacity "(:measurement 0.75)")
(def actionHoverOpacity "(:measurement 1)")
(def actionTransition "(:variableName @ defaultEasing)")
(def favoriteColor "#FFB70A")
(def favoriteActiveColor "#FFE623")
(def likeColor "#FF2733")
(def likeActiveColor "#FF2733")
(def headerLinkColor "(:variableName @ headerColor)")
(def headerLinkHoverColor "(:variableName @ linkHoverColor)")
(def metaLinkColor "(:variableName @ lightTextColor)")
(def metaLinkHoverColor "(:variableName @ textColor)")
(def contentLinkColor "")
(def contentLinkHoverColor "")
(def contentLinkTransition "(:variableName @ defaultEasing)")
(def descriptionDistance "(:measurement 0.6 em)")
(def descriptionMaxWidth "(:identifier auto)")
(def descriptionFontSize "(:measurement 1 em)")
(def descriptionLineHeight "(:variableName @ lineHeight)")
(def descriptionColor "(:variableName @ textColor)")
(def contentImageWidth "")
(def contentImageVerticalAlign "(:identifier middle)")
(def avatarSize "(:variableName @ contentImageWidth)")
(def avatarBorderRadius "(:variableName @ circularRadius)")
(def paragraphDistance "(:measurement 0.5 em)")
(def extraDivider "(:identifier none)")
(def extraHorizontalSpacing "(:identifier rem)")
(def extraRowSpacing "(:identifier rem)")
(def extraBackground "(:identifier none)")
(def extraDisplay "(:identifier block)")
(def extraPosition "(:identifier relative)")
(def extraTop "(:measurement 0 em)")
(def extraLeft "(:measurement 0 em)")
(def extraWidth "(:measurement 100 %)")
(def extraPadding "(:measurement 0 em)")
(def extraBoxShadow "(:identifier none)")
(def extraColor "(:variableName @ lightTextColor)")
(def extraTransition "(:variableName @ defaultEasing)")
(def relaxedItemSpacing "(:measurement 1.5 em)")
(def veryRelaxedItemSpacing "(:measurement 2 em)")
(def dividedBorder "(:variableName @ borderColor)")
(def dividedMargin "(:measurement 0 em)")
(def dividedPadding "(:measurement 0 em)")
(def dividedFirstLastMargin "(:measurement 0 em)")
(def dividedFirstLastPadding "(:measurement 0 em)")
(def unstackableMobileImageWidth "(:measurement 125 px)")
(defstyles root)
