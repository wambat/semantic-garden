(clojure.core/ns
 styles.themes.flat.globals.site
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def imagePath (clojure.core/str "themes/default/assets/images"))
(def fontPath (clojure.core/str "themes/default/assets/fonts"))
(def headerFont (clojure.core/str "sans-serif"))
(def pageFont (clojure.core/str "sans-serif"))
(def fontSmoothing (clojure.core/str "antialiased"))
(def blue (clojure.core/str "#0074D9"))
(def green (clojure.core/str "#2ECC40"))
(def orange (clojure.core/str "#FF851B"))
(def pink (clojure.core/str "#D9499A"))
(def purple (clojure.core/str "#A24096"))
(def red (clojure.core/str "#FF4136"))
(def teal (clojure.core/str "#39CCCC"))
(def yellow (clojure.core/str "#FFCB08"))
(def black (clojure.core/str "#191919"))
(def grey (clojure.core/str "#CCCCCC"))
(def white (clojure.core/str "#FFFFFF"))
(def lightBlue (clojure.core/str "#54C8FF"))
(def lightGreen (clojure.core/str "#2ECC40"))
(def lightOrange (clojure.core/str "#FF851B"))
(def lightPink (clojure.core/str "#FF8EDF"))
(def lightPurple (clojure.core/str "#CDC6FF"))
(def lightRed (clojure.core/str "#FF695E"))
(def lightTeal (clojure.core/str "#6DFFFF"))
(def lightYellow (clojure.core/str "#FFE21F"))
(def primaryColor (clojure.core/str blue))
(def secondaryColor (clojure.core/str black))
(def bodyBackground (clojure.core/str "#FCFCFC"))
(def fontSize (clojure.core/str "14px"))
(def textColor (clojure.core/str "rgba"))
(def headerMargin (clojure.core/str "1em" " " "0em" " " "11" " " "rem"))
(def paragraphMargin (clojure.core/str "0em" " " "0em" " " "1em"))
(def linkColor (clojure.core/str "#009FDA"))
(def linkUnderline (clojure.core/str "none"))
(def linkHoverColor (clojure.core/str "lighten"))
(def linkHoverUnderline (clojure.core/str linkUnderline))
(def highlightBackground (clojure.core/str "#FFFFCC"))
(def highlightColor (clojure.core/str textColor))
(def subtleTransparentBlack (clojure.core/str "rgba"))
(def transparentBlack (clojure.core/str "rgba"))
(def strongTransparentBlack (clojure.core/str "rgba"))
(def subtleTransparentWhite (clojure.core/str "rgba"))
(def transparentWhite (clojure.core/str "rgba"))
(def strongTransparentWhite (clojure.core/str "rgba"))
(def subtleGradient (clojure.core/str "linear-gradient"))
(def
 subtleShadow
 (clojure.core/str "0px" " " "1px" " " "2px" " " "00" " " "rgba"))
(def columnCount (clojure.core/str "1616"))
(def mobileBreakpoint (clojure.core/str "320px"))
(def tabletBreakpoint (clojure.core/str "768px"))
(def computerBreakpoint (clojure.core/str "992px"))
(def largeMonitorBreakpoint (clojure.core/str "1400px"))
(def widescreenMonitorBreakpoint (clojure.core/str "1900px"))
(defstyles root)
