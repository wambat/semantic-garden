(clojure.core/ns
 themes.flat.globals.site
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def imagePath nil)
(def fontPath nil)
(def headerFont (clojure.core/str "sans-serif"))
(def pageFont (clojure.core/str "sans-serif"))
(def fontSmoothing (clojure.core/str "antialiased"))
(def blue nil)
(def green nil)
(def orange nil)
(def pink nil)
(def purple nil)
(def red nil)
(def teal nil)
(def yellow nil)
(def black nil)
(def grey nil)
(def white nil)
(def lightBlue nil)
(def lightGreen nil)
(def lightOrange nil)
(def lightPink nil)
(def lightPurple nil)
(def lightRed nil)
(def lightTeal nil)
(def lightYellow nil)
(def primaryColor (clojure.core/str blue))
(def secondaryColor (clojure.core/str black))
(def bodyBackground nil)
(def fontSize (clojure.core/str "14px"))
(def textColor (clojure.core/str "rgba"))
(def headerMargin (clojure.core/str "1em" " " "0em" " " "11" " " "rem"))
(def paragraphMargin (clojure.core/str "0em" " " "0em" " " "1em"))
(def linkColor nil)
(def linkUnderline (clojure.core/str "none"))
(def linkHoverColor (clojure.core/str "lighten"))
(def linkHoverUnderline (clojure.core/str linkUnderline))
(def highlightBackground nil)
(def highlightColor (clojure.core/str textColor))
(def subtleTransparentBlack (clojure.core/str "rgba"))
(def transparentBlack (clojure.core/str "rgba"))
(def strongTransparentBlack (clojure.core/str "rgba"))
(def subtleTransparentWhite (clojure.core/str "rgba"))
(def transparentWhite (clojure.core/str "rgba"))
(def strongTransparentWhite (clojure.core/str "rgba"))
(def subtleGradient (clojure.core/str "linear-gradient"))
(def
 subtleShadow
 (clojure.core/str "0px" " " "1px" " " "2px" " " "00" " " "rgba"))
(def columnCount (clojure.core/str "1616"))
(def mobileBreakpoint (clojure.core/str "320px"))
(def tabletBreakpoint (clojure.core/str "768px"))
(def computerBreakpoint (clojure.core/str "992px"))
(def largeMonitorBreakpoint (clojure.core/str "1400px"))
(def widescreenMonitorBreakpoint (clojure.core/str "1900px"))
(defstyles root)
