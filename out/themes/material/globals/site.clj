(clojure.core/ns
 styles.themes.material.globals.site
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def headerFont (clojure.core/str "sans-serif"))
(def pageFont (clojure.core/str "sans-serif"))
(def googleFontName (clojure.core/str "Roboto"))
(def emSize (clojure.core/str "14px"))
(def fontSize (clojure.core/str "13px"))
(def pageBackground (clojure.core/str "#F9F9F9"))
(def lineHeight (clojure.core/str "1.331.33"))
(def textColor (clojure.core/str "#212121"))
(def headerLineHeight (clojure.core/str "1.33em"))
(def headerFontWeight (clojure.core/str "400400"))
(def h1 (clojure.core/str "2.252.25" " " "rem"))
(def h2 (clojure.core/str "22" " " "rem"))
(def h3 (clojure.core/str "1.751.75" " " "rem"))
(def h4 (clojure.core/str "1.51.5" " " "rem"))
(def h5 (clojure.core/str "1.251.25" " " "rem"))
(def imagePath (clojure.core/str "themes/material/assets/images"))
(def fontPath (clojure.core/str "themes/material/assets/fonts"))
(def paragraphLineHeight (clojure.core/str "1.7em"))
(def black (clojure.core/str "#1B1C1D"))
(def blue (clojure.core/str "#2196F3"))
(def green (clojure.core/str "#4CAF50"))
(def grey (clojure.core/str "#9E9E9E"))
(def orange (clojure.core/str "#FF9800"))
(def pink (clojure.core/str "#E91E63"))
(def purple (clojure.core/str "#9C27B0"))
(def red (clojure.core/str "#F44336"))
(def teal (clojure.core/str "#1de9b6"))
(def yellow (clojure.core/str "#FFEB3B"))
(def lightBlack (clojure.core/str "#333333"))
(def lightBlue (clojure.core/str "#2979FF"))
(def lightGreen (clojure.core/str "#00E676"))
(def lightOrange (clojure.core/str "#FF9100"))
(def lightPink (clojure.core/str "#F50057"))
(def lightPurple (clojure.core/str "#D500F9"))
(def lightRed (clojure.core/str "#FF1744"))
(def lightTeal (clojure.core/str "#1DE9B6"))
(def lightYellow (clojure.core/str "#FFEA00"))
(def fullBlack (clojure.core/str "#000000"))
(def darkGrey (clojure.core/str "#AAAAAA"))
(def lightGrey (clojure.core/str "#DCDDDE"))
(def offWhite (clojure.core/str "#FAFAFA"))
(def darkWhite (clojure.core/str "#F0F0F0"))
(def white (clojure.core/str "#FFFFFF"))
(def primaryColor (clojure.core/str blue))
(def secondaryColor (clojure.core/str grey))
(def lightPrimaryColor (clojure.core/str lightBlue))
(def lightSecondaryColor (clojure.core/str lightGrey))
(def paragraphMargin (clojure.core/str "0em" " " "0em" " " "1.53em"))
(def linkColor (clojure.core/str "#009FDA"))
(def linkUnderline (clojure.core/str "none"))
(def linkHoverColor (clojure.core/str "lighten"))
(def linkHoverUnderline (clojure.core/str linkUnderline))
(def highlightBackground (clojure.core/str "#009FDA"))
(def highlightColor (clojure.core/str white))
(def relativeBorderRadius (clojure.core/str relative4px))
(def absoluteBorderRadius (clojure.core/str "4px"))
(defstyles root)
