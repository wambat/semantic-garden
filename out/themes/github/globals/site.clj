(clojure.core/ns
 themes.github.globals.site
 (:require
  [garden.def :refer [defstyles]]
  [garden.stylesheet :refer [at-media]]
  [garden.selectors :as sel]
  [garden.units :refer [px]]))
(def pageMinWidth (clojure.core/str "1049px"))
(def pageOverflowX (clojure.core/str "visible"))
(def emSize (clojure.core/str "13px"))
(def fontSize (clojure.core/str "13px"))
(def fontName (clojure.core/str "Arial"))
(def h1 (clojure.core/str "2.25em"))
(def defaultBorderRadius (clojure.core/str "0.2307em"))
(def disabledOpacity (clojure.core/str "0.30.3"))
(def blue (clojure.core/str "#80A6CD"))
(def green (clojure.core/str "#78CB5B"))
(def orange (clojure.core/str "#D26911"))
(def black (clojure.core/str "#333333"))
(def primaryColor (clojure.core/str green))
(def secondaryColor (clojure.core/str black))
(def linkColor (clojure.core/str "#4078C0"))
(def linkHoverColor (clojure.core/str linkColor))
(def linkHoverUnderline (clojure.core/str "underline"))
(def borderColor (clojure.core/str "rgba"))
(def solidBorderColor (clojure.core/str "#DDDDDD"))
(def internalBorderColor (clojure.core/str "rgba"))
(def selectedBorderColor (clojure.core/str "#51A7E8"))
(def largeMonitorBreakpoint (clojure.core/str "1049px"))
(def computerBreakpoint (clojure.core/str largeMonitorBreakpoint))
(def tabletBreakpoint (clojure.core/str largeMonitorBreakpoint))
(def infoBackgroundColor (clojure.core/str "#E6F1F6"))
(def infoTextColor (clojure.core/str "#4E575B"))
(def warningTextColor (clojure.core/str "#613A00"))
(def errorTextColor (clojure.core/str "#991111"))
(defstyles root)
